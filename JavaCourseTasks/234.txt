<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
    <head>
        <title>A Synchronized Class Example (The Java&trade; Tutorials &gt; 
            Essential Classes &gt; Concurrency)
</title>
<style type="text/css">
    .FigureCaption   { 
        margin-left: 1in; 
        margin-right: 1in; 
        font-family: Arial, Helvetica, sans-serif; 
        font-size: smaller; 
        text-align: justify;
    }
    div#TopBar_bl {
        background: url(../../images/java_bar_bl.gif) 0 100% no-repeat;
        width: 100%;
        height: 60px;
    }
    div#TopBar_br {
        background: url(../../images/java_bar_br.gif) 100% 100% no-repeat;
        width: 100%;
        height: 60px;
    }
    div#TopBar_tl {
        background: url(../../images/java_bar_tl.gif) 0 0 no-repeat;
        width: 100%;
        height: 60px;
    }
    div#TopBar_tr {
        background: url(../../images/java_bar_tr.gif) 100% 0 no-repeat;
        width: 100%;
        height: 60px;
    }
    div#TopBar {
        background: #35556B url(../../images/java_bar.gif);
        margin: 10px 10px 0 10px;
        height:60px;
        min-width:700px;
        color: white;
        font-family: Arial, Helvetica, sans-serif; 
        font-weight: bold;
    }
    div#TopBar_left {
        margin-left: 100px;
        padding-top: 6px;
    }
    @media print {
        div#TopBar_left {
            margin-left: 0;
        }
        div#BreadCrumbs, span#Download {
            display: none;
        }
    }
    div#TopBar_right {
        float: right;
        padding-top: 8px;
        padding-right: 30px;
        text-align: center;
    }
    @media print {
        div#TopBar_right {
            display: none;
        }
    }
    div#TopBar a:visited, div#TopBar a:link {
        color: white;
    }
    div#TopBar a:hover, div#TopBar a:active  {
        background-color: white;
        color: #35556B;
    }
    div#PageTitle {
        font-size: 20px;
    }
    div#LeftBar {
        width: 13em;
        float: left;
        margin-left: 10px;
        margin-top: 10px;
    }
    div#LittleLeft {
        float: left;
        width: 13em;
        margin-left: 10px;
    }
    div#Footer {
        padding-top: 10px;
        padding-left: 10px;
        text-align: right;
        margin-right: 10px;
    }
    .NavBit  {
        color: #35556B;
        font-family: Arial, Helvetica, sans-serif; 
        padding: 2px;
        margin: 2px;
        text-align: center;
        border-style: solid;
        border-width: 1px;
        border-color: #35556B;
    }
    @media print {
        .NavBit {
            display: none;
        }
    }
    div#TagNotes {
        margin-top: 10px;
        font-family: Arial, Helvetica, sans-serif; 
        color: #35556B;
    }
    @media print {
        span#TagNotes a:visited, span#TagNotes a:link {
            color: #35556B;
            text-decoration: none;
        }
    }
    div#Contents a:visited, div#Contents a:link,
    .NavBit a:visited, .NavBit a:link {
        color: #35556B;
        text-decoration: none;
    }
    div#Contents a:hover, div#Contents a:active,   
    .NavBit a:hover, .NavBit a:active {  
        color: #35556B;
        text-decoration: underline;
    }
    div#Contents {
        color: #35556B;
        float: left;
        font-family: Arial, Helvetica, sans-serif; 
        margin-top: 20px;
    }
    @media print {
        div#Contents {
            display: none;
        }
    }
    @media screen {
        div.PrintHeaders {
            display: none;
        }
    }
    .linkLESSON, .nolinkLESSON {
        margin-left: 0.5em;
        text-indent: -0.5em
    }
    .linkAHEAD, .nolinkAHEAD, .linkQUESTIONS, .nolinkQUESTIONS   {
        margin-left: 1.5em; 
        text-indent: -0.5em
    }
    .linkBHEAD, .nolinkBHEAD   {
        margin-left: 2.5em;
        text-indent: -0.5em
    }
    .linkCHEAD, .nolinkCHEAD   {
        margin-left: 3.5em;
        text-indent: -0.5em
    }
    .nolinkLESSON, .nolinkAHEAD, .nolinkBHEAD, .nolinkCHEAD,
    .nolinkQUESTIONS {
        font-weight: bold;
        color: #35556B;
    }
    div#MainFlow {
        margin-right: 10px;
        margin-left: 15em;
        margin-bottom: 2em;

    }
    @media print {
        div#MainFlow {
            padding-top: 0;
            margin-top: 10px;
            margin-right: 10px;
            margin-left: 0;
        }
    }

</style>
    </head>
<body>
    <div id=TopBar> <div id=TopBar_tr> <div id=TopBar_tl> <div id=TopBar_br> <div id=TopBar_bl> 
                        <div id=TopBar_right> 
                            <a href="../../search.html" target="_top">Search</a>
                            <br>
                            <a target=_top href="http://developer.sun.com/contact/tutorial_feedback.jsp">Feedback</a>
                        </div>
                        <div id=TopBar_left>
                            <div class=PrintHeaders>
                                <b>Trail:</b> Essential Classes
                                <br><b>Lesson:</b> Concurrency
                                <br><b>Section:</b> Immutable Objects
                            </div>
                            <div id=BreadCrumbs>
                                <a href=../../index.html
                                    target=_top>The Java&trade;
                                    Tutorials</a>
                            &gt;
                                <a href=../index.html target=_top>Essential Classes</a>
                            &gt;
                                <a href=index.html target=_top>Concurrency</a>
                            </div>
                            <div id=PageTitle>A Synchronized Class Example</div>
                        </div>
                    </div> </div> </div> </div> </div>

    <div id=LeftBar>
        <div class=NavBit>
            <a target=_top href=immutable.html>&laquo; Previous</a>
            &bull;
            <a target=_top href=../TOC.html>TOC</a>
            &bull;
            <a target=_top href=imstrat.html>Next &raquo;</a>
        </div>
        <div id=Contents>
            <div class="linkLESSON"><a href="index.html">Concurrency</a></div>
<div class="linkAHEAD"><a href="procthread.html">Processes and Threads</a></div>
<div class="linkAHEAD"><a href="threads.html">Thread Objects</a></div>
<div class="linkBHEAD"><a href="runthread.html">Defining and Starting a Thread</a></div>
<div class="linkBHEAD"><a href="sleep.html">Pausing Execution with Sleep</a></div>
<div class="linkBHEAD"><a href="interrupt.html">Interrupts</a></div>
<div class="linkBHEAD"><a href="join.html">Joins</a></div>
<div class="linkBHEAD"><a href="simple.html">The SimpleThreads Example</a></div>
<div class="linkAHEAD"><a href="sync.html">Synchronization</a></div>
<div class="linkBHEAD"><a href="interfere.html">Thread Interference</a></div>
<div class="linkBHEAD"><a href="memconsist.html">Memory Consistency Errors</a></div>
<div class="linkBHEAD"><a href="syncmeth.html">Synchronized Methods</a></div>
<div class="linkBHEAD"><a href="locksync.html">Intrinsic Locks and Synchronization</a></div>
<div class="linkBHEAD"><a href="atomic.html">Atomic Access</a></div>
<div class="linkAHEAD"><a href="liveness.html">Liveness</a></div>
<div class="linkBHEAD"><a href="deadlock.html">Deadlock</a></div>
<div class="linkBHEAD"><a href="starvelive.html">Starvation and Livelock</a></div>
<div class="linkAHEAD"><a href="guardmeth.html">Guarded Blocks</a></div>
<div class="linkAHEAD"><a href="immutable.html">Immutable Objects</a></div>
<div class="nolinkBHEAD">A Synchronized Class Example</div>
<div class="linkBHEAD"><a href="imstrat.html">A Strategy for Defining Immutable Objects</a></div>
<div class="linkAHEAD"><a href="highlevel.html">High-Level Concurrency Objects</a></div>
<div class="linkBHEAD"><a href="newlocks.html">Lock Objects</a></div>
<div class="linkBHEAD"><a href="executors.html">Executors</a></div>
<div class="linkCHEAD"><a href="exinter.html">Executor Interfaces</a></div>
<div class="linkCHEAD"><a href="pools.html">Thread Pools</a></div>
<div class="linkBHEAD"><a href="collections.html">Concurrent Collections</a></div>
<div class="linkBHEAD"><a href="atomicvars.html">Atomic Variables</a></div>
<div class="linkAHEAD"><a href="further.html">For Further Reading</a></div>
<div class="linkQUESTIONS"><a href="QandE/questions.html">Questions and Exercises</a></div>
</div>
    </div>
    <div id=MainFlow>
        <blockquote>
The class,
<a class="SourceLink" target="_blank" href="example/SynchronizedRGB.java"><code><code>SynchronizedRGB</code></code></a>, defines objects that represent colors. Each object represents the
color as three integers that stand for primary color values and a
string that gives the name of the color.
<blockquote><pre>
public class SynchronizedRGB {

    //Values must be between 0 and 255.
    private int red;
    private int green;
    private int blue;
    private String name;

    private void check(int red, int green, int blue) {
        if (red &lt; 0 || red &gt; 255
                || green &lt; 0 || green &gt; 255
                || blue &lt; 0 || blue &gt; 255) {
            throw new IllegalArgumentException();
        }
    }

    public SynchronizedRGB(int red, int green, int blue, String name) {
        check(red, green, blue);
        this.red = red;
        this.green = green;
        this.blue = blue;
        this.name = name;
    }

    public void set(int red, int green, int blue, String name) {
        check(red, green, blue);
        synchronized (this) {
            this.red = red;
            this.green = green;
            this.blue = blue;
            this.name = name;
        }
    }

    public synchronized int getRGB() {
        return ((red &lt;&lt; 16) | (green &lt;&lt; 8) | blue);
    }

    public synchronized String getName() {
        return name;
    }

    public synchronized void invert() {
        red = 255 - red;
        green = 255 - green;
        blue = 255 - blue;
        name = &quot;Inverse of &quot; + name;
    }
}
</pre></blockquote>
<code>SynchronizedRGB</code> must be used carefully to avoid being
seen in an inconsistent state. Suppose, for example, a thread executes
the following code:
<blockquote><pre>
SynchronizedRGB color = new SynchronizedRGB(0, 0, 0, "Pitch Black");
...
int myColorInt = color.getRGB();      //Statement 1
String myColorName = color.getName(); //Statement 2
</pre></blockquote>
If another thread invokes <code>color.set</code> after Statement 1
but before Statement 2, the value of <code>myColorInt</code> won't
match the value of <code>myColorName</code>. To avoid this outcome,
the two statements must be bound together:
<blockquote><pre>
synchronized (color) {
    int myColorInt = color.getRGB();
    String myColorName = color.getName();
} 
</pre></blockquote>
This kind of inconsistency is only possible for mutable objects
&mdash; it will not be an issue for the immutable version of
<code>SynchronizedRGB</code>.
        </blockquote>
    </div>
    <div id=Footer>
        <span class=NavBit>
            <a target=_top href=immutable.html>&laquo; Previous</a>
            &bull;
            <a target=_top href=../TOC.html>TOC</a>
            &bull;
            <a target=_top href=imstrat.html>Next &raquo;</a>
        </span>
<div id=TagNotes>
    <a href="../../information/copyright.html">Copyright</a>
    1995-2006 Sun Microsystems, Inc.  All rights reserved.
    <span id=Download>
        <br>
        The Java Tutorials describe features that are new for Java SE 6.
<a class="OutsideLink" target="_blank" href="http://java.sun.com/javase/6/ ">Download JDK 6</a>.</span></div> 

    </div>
    <div class=PrintHeaders>
        <b>Previous page:</b> Immutable Objects
        <br><b>Next page:</b> A Strategy for Defining Immutable Objects
    </div>
    </body>
</html> 